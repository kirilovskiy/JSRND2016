public class SalaryHtmlReportNotifier {

    private Connection connection;
    private DateRange dateRange;

    public SalaryHtmlReportNotifier(Connection databaseConnection,LocalDate dateFrom, LocalDate dateTo) {
        this.connection = databaseConnection;
		this.dateRange = new DateRange(dateFrom, dateTo);
    }

    public PreparedStatement prepareSql(String department, DateRange dateRange){
        PreparedStatement ps = connection.prepareStatement("select emp.id as emp_id, emp.name as amp_name, sum(salary) as salary from employee emp left join" +
                    "salary_payments sp on emp.id = sp.employee_id where emp.department_id = ? and" +
                    " sp.date >= ? and sp.date <= ? group by emp.id, emp.name");
        ps.setString(0, departmentId);
        ps.setDate(1, new java.sql.Date(dateRange.dateFrom.toEpochDay()));
        ps.setDate(2, new java.sql.Date(dateRange.dateTo.toEpochDay()));
	return ps;
    }

    public StringBuilder generateHtml(ResultSet results){ 	
        StringBuilder resultingHtml = new StringBuilder();
        resultingHtml.append("<html><body><table><tr><td>Employee</td><td>Salary</td></tr>");
        double totals = 0;
        while (results.next()) {
            resultingHtml.append("<tr>"); 
            resultingHtml.append("<td>").append(results.getString("emp_name")).append("</td>"); 
            resultingHtml.append("<td>").append(results.getDouble("salary")).append("</td>");
            resultingHtml.append("</tr>"); 
            totals += results.getDouble("salary");
        }
        resultingHtml.append("<tr><td>Total</td><td>").append(totals).append("</td></tr>");
        resultingHtml.append("</table></body></html>");
		return resultingHtml;   
    }

	public void sendMailRecipients(String recipients){
	 	// now when the report is built we need to send it to the recipients list
        JavaMailSenderImpl mailSender = new JavaMailSenderImpl();
        // we're going to use google mail to send this message
        mailSender.setHost("mail.google.com");
        // construct the message
        MimeMessage message = mailSender.createMimeMessage();
        MimeMessageHelper helper = new MimeMessageHelper(message, true);
        helper.setTo(recipients);
        // setting message text, last parameter 'true' says that it is HTML format
        helper.setText(resultingHtml.toString(), true);
        helper.setSubject("Monthly department salary report");
        // send the message
        mailSender.send(message);
	}

    public void SendHtmlSalaryReport(String departmentId, DateRange dateRange,  String recipients) {
        try {
            ResultSet results = prepareSql(departmentId,dateRange).executeQuery();
            StringBuilder resultingHtml = generateHtml(results);
			sendMailRecipients(recipients);          
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }


    class DateRange{
	private LocalDate dateFrom; 
	private LocalDate dateTo;
	public DateRange(LocalDate dateFrom, LocalDate dateTo){
		this.dateFrom = dateFrom;
		this.dateTo = dateTo;
	}
    } 
}